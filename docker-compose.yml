services:
  backend:
    build: ./heart_beat_server
    ports:
      - "4000:3000"
    env_file:
      - ./heart_beat_server/.env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=12345
      - DB_NAME=heartbeat_db
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./heart_beat_server:/app
      - /app/node_modules
    command: >
      sh -c "npx typeorm-ts-node-commonjs migration:run -d data-source.ts && 
           npm run seed && 
           npm run start:dev"

  fastapi:
    build:
      context: ./heart_beat_model
      dockerfile: fast/Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - mlflow
    volumes:
      - ./heart_beat_model:/app
      - mlflow_data:/app/mlflow
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mlflow:
    build:
      context: ./heart_beat_model
      dockerfile: mlflow/Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - mlflow_data:/app/mlflow
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: pgvector/pgvector:pg17
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=12345
      - POSTGRES_DB=heartbeat_db
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./heart_beat_workflows/postgres-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  n8n:
    image: docker.n8n.io/n8nio/n8n
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=password
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - WEBHOOK_URL=http://localhost:5678
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n_db
      - DB_POSTGRESDB_USER=postgres
      - DB_POSTGRESDB_PASSWORD=12345
      - N8N_PAYLOAD_SIZE_MAX=16
      - N8N_SECURE_COOKIE=false
    volumes:
      - n8n_data:/home/node/.n8n
      - ./heart_beat_workflows/n8n_workflows:/home/node/.n8n/workflows
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:5678/healthz",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
  mlflow_data:
  n8n_data:
