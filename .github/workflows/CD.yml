name: Heart-Beat CD

on:
  push:
    branches: [ 'main' ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          script: |
            if ! command -v docker &> /dev/null; then
              echo "Installing Docker..."
              sudo apt-get update
              sudo apt-get install -y ca-certificates curl
              sudo install -m 0755 -d /etc/apt/keyrings
              sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
              sudo chmod a+r /etc/apt/keyrings/docker.asc
              echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
              sudo apt-get update
              sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
              sudo usermod -aG docker $USER
              echo "Docker installed successfully"
            else
              echo "Docker is already installed"
            fi

            if ! command -v docker-compose &> /dev/null && ! docker compose version &> /dev/null; then
              echo "Installing Docker Compose..."
              sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
              echo "Docker Compose installed successfully"
            else
              echo "Docker Compose is already available"
            fi
            

            APP_DIR=/home/ubuntu/heart-beat
            mkdir -p $APP_DIR
            cd $APP_DIR

            mkdir -p ~/.ssh
            echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/deploy_key
            chmod 600 ~/.ssh/deploy_key
            ssh-keyscan github.com >> ~/.ssh/known_hosts

            export GIT_SSH_COMMAND="ssh -i ~/.ssh/deploy_key -o IdentitiesOnly=yes"

            if [ -d ".git" ]; then
              git reset --hard
              git pull origin main
            else
              git clone git@github.com:Daniel-Hayek/heart-beat.git .
            fi

            echo "Creating backend .env file..."
            mkdir -p heart_beat_server
            cat > heart_beat_server/.env << EOF
            #JWT config
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            #Hugging Face
            HF_API_KEY=${{ secrets.HF_API_KEY }}
            HF_API_URL=https://api-inference.huggingface.co/
            HF_MODEL_ID=models/BAAI/bge-small-en-v1.5
            #Cohere
            CH_API_KEY=${{ secrets.CH_API_KEY }}
            #Redis
            REDIS_HOST=redis
            REDIS_PORT=6379
            REDIS_PASSWORD=
            #Fast API
            FAST_URL=http://fastapi
            FAST_PORT=8000
            EOF
            echo ".env file created successfully"

            rm -rf heart_beat_client/

            docker-compose down --timeout 30
            
            docker image prune -f
            
            docker-compose up --build -d

            docker-compose logs backend | tail -10
